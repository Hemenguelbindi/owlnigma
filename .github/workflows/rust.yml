name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.platform.os_name }} with Rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            bin: owlnigma-linux-arm64
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: owlnigma-linux-amd64
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: owlnigma.exe
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: owlnigma-darwin-amd64
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: owlnigma-darwin-arm64
        toolchain:
          - stable

    steps:
      # Шаг 1: Checkout репозиторий
      - uses: actions/checkout@v3

      # Шаг 2: Установка инструментов Rust и кросс-компиляция
      - name: Install Rust toolchain and dependencies
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.platform.target }}
          profile: minimal
          override: true

      # Шаг 3: Установка переменной окружения с секретом
      - name: Set up environment
        run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      # Шаг 4: Сборка исполняемого файла
      - name: Build binary
        run: cargo build --release --target ${{ matrix.platform.target }}

      # Шаг 5: Переименование бинарного файла
      - name: Rename binary (Linux and macOS)
        run: mv target/${{ matrix.platform.target }}/release/owlnigma target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os_name != 'Windows-x86_64'

      - name: Rename binary (Windows)
        run: mv target/${{ matrix.platform.target }}/release/owlnigma.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os_name == 'Windows-x86_64'

      # Шаг 6: Создание SHA-256 хеша для бинарного файла
      - name: Generate SHA-256
        run: shasum -a 256 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} | cut -d ' ' -f 1 > target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256

      # Шаг 7: Публикация релиза на GitHub
      - name: Release binary and SHA-256 checksum to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
            target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Дополнительный шаг: Вывод файлов в директории для отладки
      - name: List built files
        run: ls -la target/${{ matrix.platform.target }}/release/
